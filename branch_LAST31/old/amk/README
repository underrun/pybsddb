README.txt
August 20, 2000  -  bsddb3.db v2.9.0
akuchlin@mems-exchange.org

This is an experimental version of the BerkeleyDB module that uses a C
module written from scratch, instead of the SWIG-generated wrapper used in
earlier versions.

Cursor objects have been implemented but are completely untested.

Tasks remaining:
   * test cursor objects
   * test RECNO files
   * expand the test suite so it exercises every method
   * convert most of the block comments in _bsddb.c into docstrings
   * carefully read through the code, checking it for any stupid errors
made during the translation process
   * get the module into either Python 2.1 or the next BerkeleyDB release.
   
The original README follows.

--amk

June 8, 2000  -  bsddb3.db v2.1.1
greg@mad-scientist.com / greg@electricrain.com
Evil Geniuses For A Better Tomorrow
[ bsddb3 homepage - http://electricrain.com/greg/python/bsddb3/ ]
----------------------------------------------------------------------------

This module provides a Python interface to BerkeleyDB 3.1 (known as
and evolved from the "bsd db" libraries of old).  BerkeleyDB is
available from http://www.sleepycat.com/.

Installation
============

1. You will need to have already installed version 3.1.14 of the
BerkeleyDB library.  Check the paths in Setup.in to be sure it is where
your libdb.a (or libdb-3.1.so) and berkeley db header files are located.

2. Execute "make -f Makefile.pre.in boot" to build the Makefile to match
your Python installation.

3. Run "make" to build your dbc module as a shared library.

4. Run "make superclean" to cleanup all the stuff you don't need anymore.

5. Testing.  Make a subdirectory called foo.  I have written some generic
tests in dbtest.py; they could probably be better but you should always
be able to run dbtest.py without errors.  Some of the tests can take a
while, but they each complete in under a minute on my Celeron 333 laptop.

6. The API for this module attempts to mirror the BerkeleyDB 3.1 C++
API as much as possible.  There are a few additional features (such as
the automatic transaction) which were carried over from Robin Dunn's
version of the module.  Use the Sleepycat BerkeleyDB reference manual
for the best information; the __doc__ strings are fairly complete.

The dbtables module
===================

New as of release v2.0.7 is the dbtables.py module.  It implements a
simple table based database on top of the bsddb3.db module.

I haven't written any formal documentation; however using its doc strings
and dbtablestest.py you should be able to figure out its simple interface.
This should be very useful when you want a simple table structured
database but don't like the overhead or licenses of any of the larger
SQL database packages.

----------------------------------------------------------------------------
................ Relevant portions of the original README: .................
----------------------------------------------------------------------------

README.txt
12-July-1999
robin@alldunn.com
----------------------------------------------------------------------------

Notes
=====

I have done no testing with RECNO files, so I am reasnonably sure that there
are probably several bugs lurking there.  I don't have a need for RECNO files
myself, does anybody want to use them?  If so, let me know how it goes and
I'll work on fixing the bugs.

Have fun and keep an eye on http://starship.skyport.net/robind/python/ for
updates.

----------------------------------------------------------------------------

