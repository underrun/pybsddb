README.txt
December 2, 2000  -  bsddb3.db v2.2.3
greg@users.sourceforge.net
Evil Geniuses For A Better Tomorrow
[ bsddb3 homepage - http://electricrain.com/greg/python/bsddb3/ ]
----------------------------------------------------------------------------

This module provides a Python interface to BerkeleyDB 3.1 (known as
and evolved from the "bsd db" libraries of old).  BerkeleyDB is
available from http://www.sleepycat.com/.

Installation
============

1. You will need to have already installed version 3.1 of the
BerkeleyDB library (3.1.14 and 3.1.17 were used to develop this module).
Set your BERKELEYDB_DIR environment variable to the parent directory
of where you installed BerkeleyDB (it must contain the lib and
include subdirectories)

2. Execute "python setup.py build_ext" to build the module as a
shared library.  You can also install it using the setup.py, run
"python setup.py --help-commands" for more info.

3. Testing.  Make a subdirectory called foo.  I have written some generic
regression tests in dbtest.py; they could probably be better but you should
always be able to run dbtest.py without errors.  Some of the tests can take a
while, but they each complete in 10-20 seconds on my Celeron 333 laptop.

4. The API for this module attempts to mirror the BerkeleyDB 3.1 C++
API as much as possible.  There are a few additional features (such as
the automatic transaction) which were carried over from Robin Dunn's
version of the module.  Use the Sleepycat BerkeleyDB reference manual
for the best information; the __doc__ strings are fairly complete.

Troubleshooting with 2.0
========================

On unix systems, Python 2.0 out of the tar.gz file comes configured
to build statically linked with its old bsddb module against whatever
BerkeleyDB modules are found on your system.  On many linux distributions
(such as debian potato) this is an old 2.1.x version and causes symbol
name conflicts when importing bsddb3.  (symptom: it'll import, but you
will get INVALID_PARAMETER db.errors and other odd errors).  The fix is
to build python 2.0 without the bsddb module or with it built as shared.
You need to edit the Modules/Setup.config.in and Modules/Setup.in files
before building python to do this.

The dbtables module
===================

The dbtables.py module implements a simple table based database on top
of the bsddb3.db module.

I haven't written any formal documentation; however using its doc strings
and dbtablestest.py you should be able to figure out its simple interface.
This should be very useful when you want a simple table structured
database but don't like the overhead or licenses of any of the larger
SQL database packages.

Change Log
==========

py-bsddb3 v2.2.3  -  2000-12-02

A memoryleak/coredump bug in the Dbc.set() method was fixed.  A bug
in the error messages in dbtest.py was fixed.  SWIG 1.3a5 was used to
generate the included db_wrap.c file so there are no __doc__ strings
for now, sorry.  This version has been tested by me on python 1.5.2
through 2.0 on Linux, OpenBSD and Windows 98/NT/2000.

py-bsddb3 v2.2.0  -  2000-10-02

Removed the simulated DB_THREAD support for platforms without native
thread support from BerkeleyDB.  It was a flawed concept that could cause
your program to deadlock using threads on those platforms.  The correct
solution is for you to fix BerkeleyDB's thread support on your target
platform and submit the patch to Sleepycat.

Changed from the old style Setup.in/Makefile.pre.in building to use the
standard python distutils package via setup.py.  The code now builds
and runs on both python 1.5.2 and python 1.6.  I have not tested it
using 2.0b2.

Future TODO
===========

Begin able to specify a python function for database key comparison
would be very cool.  Anyone want to submit a patch?

At one point this module was being suggested for inclusion in a future
python distribution (before all of the python development team job
hopping).  I would still like this to happen but haven't made enough
effort to ensure that it does.  What is needed is a non-SWIG based version
(swig's "trick" of storing pointers in strings is the main reason).

----------------------------------------------------------------------------
................ Relevant portions of the original README: .................
----------------------------------------------------------------------------

README.txt
12-July-1999
robin@alldunn.com
----------------------------------------------------------------------------

Notes
=====

I have done no testing with RECNO files, so I am reasnonably sure that there
are probably several bugs lurking there.  I don't have a need for RECNO files
myself, does anybody want to use them?  If so, let me know how it goes and
I'll work on fixing the bugs.

----------------------------------------------------------------------------

